services:

  minio:
    hostname: dummy-minio
    container_name: dummy-minio
    image: "bitnami/minio:2024.7.10"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=mydummypassword
    networks:
      - local

  redis:
    hostname: dummy-redis
    container_name: dummy-redis
    image: "bitnami/redis:7.0"
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=mydummypassword
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    volumes:
      - redis_data:/redis/data
    networks:
     - local

  mongo:
    hostname: dummy-mongo
    container_name: dummy-mongo
    image: "bitnami/mongodb:7.0"
    ports:
      - "27017:27017"
    environment:
      - MONGODB_ROOT_USER=mydummyuser
      - MONGODB_ROOT_PASSWORD=mydummypassword
    volumes:
      - mongo_data:/mongo/data
    networks:
     - local

  kafka:
    hostname: dummy-kafka
    container_name: dummy-kafka
    image: "bitnami/kafka:3.7.0"
    ports:
     - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
     - local

  postgres:
    hostname: dummy-postgres
    container_name: dummy-postgres
    image: "bitnami/postgresql:16"
    ports:
      - "5432:5432"
    environment:
      - POSTGRESQL_USERNAME=mydummyuser
      - POSTGRESQL_PASSWORD=mydummypassword
    volumes:
      - postgres_data:/postgres/data
    networks:
     - local

volumes:
  postgres_data:
  mongo_data:
  redis_data:

networks:
  local:
    driver: bridge
