// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IDGenerator is an autogenerated mock type for the IDGenerator type
type IDGenerator struct {
	mock.Mock
}

type IDGenerator_Expecter struct {
	mock *mock.Mock
}

func (_m *IDGenerator) EXPECT() *IDGenerator_Expecter {
	return &IDGenerator_Expecter{mock: &_m.Mock}
}

// NewID provides a mock function with given fields:
func (_m *IDGenerator) NewID() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for NewID")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// IDGenerator_NewID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewID'
type IDGenerator_NewID_Call struct {
	*mock.Call
}

// NewID is a helper method to define mock.On call
func (_e *IDGenerator_Expecter) NewID() *IDGenerator_NewID_Call {
	return &IDGenerator_NewID_Call{Call: _e.mock.On("NewID")}
}

func (_c *IDGenerator_NewID_Call) Run(run func()) *IDGenerator_NewID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *IDGenerator_NewID_Call) Return(_a0 string) *IDGenerator_NewID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *IDGenerator_NewID_Call) RunAndReturn(run func() string) *IDGenerator_NewID_Call {
	_c.Call.Return(run)
	return _c
}

// NewIDGenerator creates a new instance of IDGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIDGenerator(t interface {
	mock.TestingT
	Cleanup(func())
}) *IDGenerator {
	mock := &IDGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
